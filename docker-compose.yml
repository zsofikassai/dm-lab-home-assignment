version: "3.8"

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/db
    depends_on:
      dataloader:
        condition: service_completed_successfully
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload" ]

  frontend:
    build: ./frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: [ "npm", "run", "dev", "--", "--host" ]

  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user" ]
      interval: 10s
      retries: 5
      start_period: 10s

    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db

  dataloader:
    build: ./dataloader
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/db

volumes:
  postgres_data:
